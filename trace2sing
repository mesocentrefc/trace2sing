#!/bin/sh
#
# Copyright (c) 2017 Cedric Clerget - HPC Center of Franche-Comte University
#
# http://github.com/mesocentrefc/trace2sing
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation v2.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

current=$(pwd)
saved=$current

dump=$(mktemp -d)
output="singrun.sh"

pfatal () {
    echo $1 >&2
    exit 1
}

if [ $# -lt 1 ]; then
    pfatal "usage: $0 command [arguments]"
fi

relmkdir () {
    if [ "$1" != "${1#/}" ]; then
        d="$dump$1"
    else
        d="$dump/$1"
    fi
    mkdir -p $d
}

copy () {
    relmkdir $(dirname $1)
    if [ "$1" != "${1#/}" ]; then
        filename="$dump$1"
    else
        filename="$dump/$1"
    fi
    cp -a $1 $filename 2> /dev/null
}

duplicate () {
    if [ -d $1 ]; then
        relmkdir $1
    else
        relmkdir $(dirname $1)
    fi
    if [ -f $1 ]; then
        copy $(readlink -f $1)
    fi
    if [ -L $1 ]; then
        copy $1
        target=$(readlink $1)
        if [ "$target" != "${target#/}" ]; then
            linkval=$target
        else
            linkval="$(dirname $1)/$target"
        fi
        copy $linkval
        if [ -L $linkval ]; then
            duplicate $linkval
        fi
    fi
}

if [ -z $(which strace) ]; then
    pfatal "Install strace package"
fi

awk_script=$(cat <<'AWK'
{
    match($0,/(^[0-9A-Za-z_]*)=(.*)/,a)
    if (a[1] != "") {
        print "export " a[1] "=\"" a[2] "\""
    }
}
AWK
)

awk_match=$(env|grep -w PATH|awk "$awk_script")
if [ -z "$awk_match" ]; then
    pfatal "Install gawk package"
fi

rm -rf $dump
mkdir -p $dump

env -u DISPLAY \
    -u SHELL | awk "$awk_script" > $dump/environment

echo "export SHELL=\"/bin/sh\"" >> $dump/environment

executable=$(which $1)
if [ ! -z "$executable" ]; then
    if [ "$executable" != "${executable#/}" ]; then
        duplicate $executable
    fi
fi

fifo=$(mktemp -u)
mkfifo $fifo
chmod 0600 $fifo

# Parse and remove duplicate files
awk_script=$(cat <<'AWK'
{
    match($0,/\y(open|execve|access|chdir|stat)\y\("([^"]*)"(.*)[ ]+= [^-]/,a)
    filename = a[2]
    if (!(filename ~ /^(\/dev|\/proc|\/run|\/sys)|\/boot/)) {
        if (a[2] != "") {
            if (!x[a[2]]) {
                x[a[2]]++
                print a[1] "#" a[2]
            }
        }
    }
}
AWK
)

awk "$awk_script" $fifo | while read line; do
    syscall=${line%#*}
    filepath=${line#*#}

    if [ $syscall = "chdir" ]; then
        cd $arg
        current=$(pwd)
    else
        duplicate $filepath
    fi
done &

pid=$!
cmdline="$@"
strace -q -v -f \
       -e trace=open,execve,access,chdir,stat \
       -e abbrev=none \
       -o $fifo \
       /bin/sh -c "$cmdline"

wait $pid

cd $saved
rm -f $fifo

echo "Generating self-extracting $output archive ... please wait"

loader=$(strings /bin/sh|head -n 1)
duplicate $loader

cd $dump
install -d -m 0755 "dev"
install -d -m 0755 "bin"
install -d -m 0755 "home"
install -d -m 0755 "etc"
install -d -m 0750 "root"
install -d -m 0755 "proc"
install -d -m 0755 "sys"
install -d -m 1777 "tmp"
install -d -m 1777 "var/tmp"
install -d -m 0755 "realhome"

cat > .run << EOF
#!/bin/sh
. /environment
cd $saved
$cmdline
EOF
chmod 0755 .run

cat > .exec << EOF
#!/bin/sh
. /environment
exec "\$@"
EOF
chmod 0755 .exec

cat > .shell << EOF
#!/bin/sh
. /environment
exec \$SHELL "\$@"
exit 1
EOF
chmod 0755 .shell

echo -n "" > etc/resolv.conf
echo -n "" > etc/hosts
echo -n "" > etc/passwd
echo -n "" > etc/group

cat > $saved/$output <<"EOF"
#!/bin/sh
#
# Generated by trace2sing: http://github.com/mesocentrefc/trace2sing
#

extract_archive () {
    sed '0,/^#EOF#$/d' $0
}

launch () {
    saved=$(pwd)
    cmd=$1
    directory=$(mktemp -d)
    root="$directory/singrun_rootfs"
    mkdir $root
    extract_archive | tar -xzf - -C $root
    if [ "$1" = "exec" ]; then
        shift 2 
        args="$@"
    else
        args=""
    fi
    env|sed -n 's/^SENV_\(.*\)=\(.*\)$/export \1="\2"/p' >> $root/environment
    cd $directory
    singularity $cmd -w -H $HOME:/realhome $root $args
    code=$?
    cd $saved
    rm -rf $directory
    exit $code
}

usage () {
    echo "$0 usage:"
    echo " -x or [--extract]     : to extract file tree in singrun_rootfs directory"
    echo " -s or [--shell]       : to launch a shell into container"
    echo " -e or [--exec] args   : to execute a command into container"
    echo " -l or [--list]        : to list container files tree"
    echo " -d or [--display-env] : display exported environment variables"
    exit 1
}

if [ "$#" -gt 0 ]; then
    case $1 in
        -x|--extract)
            echo "Extracting file tree into singrun_rootfs directory"
            if [ -d "singrun_rootfs" ]; then
                echo "There is already a directory singrun_rootfs"
                exit 1
            else
                mkdir singrun_rootfs
                extract_archive | tar -xzf - -C singrun_rootfs
                exit $?
            fi
            ;;
        -l|--list)
            echo "List file tree"
            extract_archive | tar -ztvf -
            exit $?
            ;;
        -d|--display-env)
            echo "Extracting environment variables"
            dir=$(mktemp -d -p .)
            extract_archive | tar -zxvf - -C $dir ./environment > /dev/null
            cat $dir/environment
            rm -rf $dir
            exit $?
            ;;
        -s|--shell)
            echo "Run shell into container"
            launch "shell"
            ;;
        -e|--exec)
            echo "Execute command into container"
            launch "exec" "$@"
            ;;
        *|-h|--help)
            usage
            ;;
    esac
fi

launch "run"
exit 0
#EOF#
EOF

tar -czf - . >> $saved/$output

chmod 0755 $saved/$output

cd $saved

rm -rf $dump
